filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }

  if [type] == "appproxysyslog" {
    grok {
      patterns_dir => "/opt/logstash/patterns"
      match => { "message" => "%{SYSLOG5424PRI}?%{SYSLOG_STANDARD_HEADER}%{NGINX_ACCESS_LOG_MSG}" }
      add_field => { "[@metadata][nginx_logtype]" => "access_log" }
    }

    grok {
      patterns_dir => "/opt/logstash/patterns"
      match => { "message" => "%{SYSLOG5424PRI}?%{SYSLOG_STANDARD_HEADER}%{NGINX_ERROR_LOG_MSG}" }
      add_field => { "[@metadata][nginx_logtype]" => "error_log" }
    }

    grok {
      patterns_dir => "/opt/logstash/patterns"
      match => { "message" => "%{SYSLOG5424PRI}?%{SYSLOG_STANDARD_HEADER}%{GREEDYDATA:generic_log_msg}" }
    }

    if [@metadata][nginx_logtype] =~ /.+/ {
      mutate {
        replace => { "type" => "%{[@metadata][nginx_logtype]}" }
      }
    } else {
      mutate {
        replace => { "type" => "generic_syslog" }
      }
    }

    if [errorlog_message] =~ /.+/ {
      mutate {
        replace => {
          "full_message" => "%{message}"
          "message" => "%{errorlog_message}"
        }
        remove_field => [ "errorlog_message" ]
      }
    } else if [generic_log_msg] =~ /.+/ {
      mutate {
        replace => {
          "full_message" => "%{message}"
          "message" => "%{generic_log_msg}"
        }
        remove_field => [ "generic_log_msg" ]
      }
    }
    syslog_pri { }
  }

  if [type] == "containers" {
    grok {
      patterns_dir => "/opt/logstash/patterns"
      match => { "message" => "%{SYSLOG5424PRI}?%{SYSLOG_CONTAINER_HEADER}(%{CONTAINER_ACCESS_LOG_MSG:container_access_log}|%{GREEDYDATA:syslog_message})" }
    }
    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
    if !("_grokparsefailure" in [tags]) {
      mutate {
        replace => {
          "full_message" => "%{message}"
        }
      }

      if [container_access_log] =~ /.+/ {
        mutate {
          replace => {
            "message" => "%{container_access_log}"
          }
        }
      } else {
        mutate {
          replace => {
            "message" => "%{syslog_message}"
          }
        }
      }
    }
    mutate {
      remove_field => [ "container_access_log", "syslog_hostname", "syslog_message", "syslog_timestamp" ]
    }
  }
}
